package des;

import java.util.Scanner;
import javax.swing.JOptionPane;
import java.lang.Math;
import java.io.*;
import java.util.*;
import java.net.URL;
import java.awt.image.BufferedImage;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.security.spec.InvalidKeySpecException;

import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.crypto.spec.IvParameterSpec;
public class ImageProcess {

	public ImageProcess() {
		// TODO Auto-generated constructor stub
	}
	
	public static void encryptDecrypt(String key, int cipherMode, File in, File out)
	throws InvalidKeyException, NoSuchAlgorithmException, InvalidKeySpecException, NoSuchPaddingException, IOException 
	{
		FileInputStream fis = new FileInputStream(in);
		FileOutputStream fos = new FileOutputStream(out);
		DESKeySpec imageProcessKeySpec = new DESKeySpec(key.getBytes());
		SecretKeyFactory skf = SecretKeyFactory.getInstance("DES");
		SecretKey secretKey = skf.generateSecret(imageProcessKeySpec);
		Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5Padding");
		if (cipherMode == Cipher.ENCRYPT_MODE)
		{
			cipher.init(cipher.ENCRYPT_MODE, secretKey, SecureRandom.getInstance("SHA1PRNG"));
			CipherInputStream cis = new CipherInputStream(fis,cipher);
			write(cis,fos);
		}
		else if (cipherMode == Cipher.DECRYPT_MODE)
		{
			cipher.init(cipher.DECRYPT_MODE, secretKey, SecureRandom.getInstance("SHA1PRNG"));
			CipherOutputStream cos = new CipherOutputStream(fos, cipher);
			write(fis, cos);
		}
	}
	public static void write(InputStream in, OutputStream out) throws IOException{
		byte[] buffer = new byte[64];
		int numOfBytesRead;
		while((numOfBytesRead = in.read(buffer)) != 1)
		{
			out.write(buffer, 0 , numOfBytesRead);
		}
		out.close();
		in.close();
	}
	public static void main(String[] args)
	{
		File plaintext = new File("C:\\Users\\attor\\OneDrive\\Documents\\bankInformation.txt");
		File encrypted = new File("C:\\Users\\attor\\OneDrive\\Documents\\encrypted.txt");
		try {
			encryptDecrypt("12345678", Cipher.ENCRYPT_MODE, plaintext, encrypted);
			System.out.println("Encryption Complete");
		} catch (InvalidKeyException | NoSuchAlgorithmException | InvalidKeySpecException | NoSuchPaddingException
				| IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
